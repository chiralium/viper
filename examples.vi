namespace F : {
    i = 0;
    words_count = 0;
    buffer = "";
    words = {};
}

function string_info(string) : {
    if (string[F->i] == "\n") : {
        F->words_count = F->words_count + 1;
        return 0;
    } else : {
        if (string[F->i] == " ") : {
            F->words[] = F->buffer;
            F->buffer = "";
            F->words_count = F->words_count + 1;
        } else : {
            F->buffer = F->buffer + string[F->i];
        }
        F->i = F->i + 1;
        string_info(string);
    }
}

string = "hello + world \n";
string_info(string);

"the count of words = "; F->words_count;
"the all words = "; F->words;

WORDS = F->words; WORDS[] = "END";
namespace arithmetica : {
    function add(x, y) : {
        return x + y;
    }

    function sub(x, y) : {
        return x - y;
    }
}

OP = {"+" => arithmetica->add, "-" => arithmetica->sub};

F->i = 0;
function calc() : {
    if (WORDS[F->i] == "END") : {
        return 0;
    } else (WORDS[F->i] == "+")  : {
        return OP[WORDS[F->i]](WORDS[F->i - 1], " " + WORDS[F->i + 1]);
    } else : {
        F->i = F->i + 1;
        return calc();
    }
}
calc();

A = {};
counter = 0;

function fill_to(x) : {
    global A; global counter;
    if (counter == x) : {
        return A;
    } else : {
        counter = counter + 1;
        A[] = counter;
        return fill_to(x);
    }
}

fill_to(10);
A;