tree = {"key" => 0, "value" => 0, "left" => NONE, "right" => NONE};

function insert(root, node) : {
    if (root <=> NONE) : {
        return node;
    } else : {
        if (root["key"] > node["key"]) : {
            if (root["left"] <=> NONE) : {
                root["left"] = node;
            } else : {
                insert(root["left"], node);
            }
        } else (root["key"] < node["key"]) : {
            if (root["right"] <=> NONE) : {
                root["right"] = node;
            } else : {
                insert(root["right"], node);
            }
        } else (root["key"] == node["key"]) : {
            root["value"] = node["value"];
        }
    }
}

function find(root, key) : {
    if (root <=> NONE) : {
        return NONE;
    } else : {
        if (root["key"] == key) : {
            return root["value"];
        } else (root["key"] > key) : {
            return find(root["left"], key);
        } else (root["key"] < key) : {
            return find(root["right"], key);
        }
    }
}

new_node1 = {"key" => 17, "value" => 1, "left" => NONE, "right" => NONE};
new_node2 = {"key" => 7, "value" => 2, "left" => NONE, "right" => NONE};
new_node3 = {"key" => -4, "value" => 3, "left" => NONE, "right" => NONE};
new_node4 = {"key" => 3, "value" => 4, "left" => NONE, "right" => NONE};
new_node5 = {"key" => 1, "value" => 5, "left" => NONE, "right" => NONE};
new_node6 = {"key" => -8, "value" => 6, "left" => NONE, "right" => NONE};
new_node7 = {"key" => 9, "value" => 7, "left" => NONE, "right" => NONE};
new_node8 = {"key" => 5, "value" => 8, "left" => NONE, "right" => NONE};
new_node9 = {"key" => 11, "value" => 9, "left" => NONE, "right" => NONE};
new_node10 = {"key" => 14, "value" => 10, "left" => NONE, "right" => NONE};

insert(tree, new_node1);
insert(tree, new_node2);
insert(tree, new_node3);
insert(tree, new_node4);
insert(tree, new_node5);
insert(tree, new_node6);
insert(tree, new_node7);
insert(tree, new_node8);
insert(tree, new_node9);
insert(tree, new_node10);
tree;

c = "";
while ( !(c == "stop") ) : {
    c = input(">>>: ");
    if (c == "find") : {
        key = integer(input("\n Enter the key of the node: "));
        finded_node = find(tree, key);
        output("\n------------------------\n");
        output("\n key => "); output(key);
        output("\n value => "); output(finded_node);
        output("\n");
    } else (c == "insert") : {
        key = integer(input("\n Enter the key of the node: "));
        value = integer(input("\n Enter the value of the node: "));
        new = {"key" => key, "value" => value, "left" => NONE, "right" => NONE};
        insert(tree, new);
        output("\n------------------------\n");
        output("Node was inserted");
    } else : {
        output("\nUndefined command\n");
    }
}